volumes:
  pg_data:
  audit-log:
    driver_opts:
      type: tmpfs
      device: tmpfs

networks:
  governor:

services:
  devcontainer:
    build:
      context: .
      dockerfile: Dockerfile.dev
    depends_on:
      - nats
    command: sleep infinity
    ports:
      - "3001:3001"
    env_file:
      - .env
    volumes:
      - ./nsc:/nsc
      - ..:/workspace:cached
      - type: volume
        source: audit-log
        target: /app-audit
        read_only: false
    networks:
      - governor

  # DB
  pg:
    image: postgres:17
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - governor
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  create-databases:
    image: postgres:17
    restart: on-failure:5
    depends_on:
      pg:
        condition: service_healthy
    environment:
      PGPASSWORD: postgres
    networks:
      - governor
    command: "psql -h pg -U postgres -c 'CREATE DATABASE governor_dev;' -c 'CREATE DATABASE hydra_dev;'"

  # hydra
  hydra:
    image: oryd/hydra:v2.3.0
    ports:
      - "4444:4444" # Public Port
      - "4445:4445" # Admin Port
      - "5555:5555" # Port for hydra token user
    command: serve -c /etc/config/hydra/hydra.yml all --dangerous-force-http
    depends_on:
      - hydra-migrate
    volumes:
      - ./hydra:/etc/config/hydra
    environment:
      - DSN=postgres://postgres:postgres@pg:5432/hydra_dev?sslmode=disable&max_conns=20&max_idle_conns=4
    restart: unless-stopped
    networks:
      - governor

  hydra-migrate:
    image: oryd/hydra:v2.3.0
    environment:
      - DSN=postgres://postgres:postgres@pg:5432/hydra_dev?sslmode=disable&max_conns=20&max_idle_conns=4
    command: migrate -c /etc/config/hydra/hydra.yml sql -e --yes
    depends_on:
      - create-databases
    volumes:
      - ./hydra:/etc/config/hydra
    restart: on-failure
    networks:
      - governor

  nats-init:
    image: natsio/nats-box
    environment:
      - NSC_HOME=/nsc
    volumes:
      - ./nsc:/nsc
      - ./nats:/nats
      - ./scripts:/scripts
    command:
      - /scripts/nats_init.sh

  nats:
    image: nats:alpine
    depends_on:
      - nats-init
    command:
      - -c
      - "/etc/nats/nats-server.conf"
      - -D
    volumes:
      - ./nats:/etc/nats
    ports:
      - "4222:4222"
    restart: unless-stopped
    networks:
      - governor

  trace:
    image: jaegertracing/all-in-one:1.60
    ports:
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "4317:4317"
      - "4318:4318"
      - "14250:14250"
      - "14268:14268"
      - "14269:14269"
      - "9411:9411"
    networks:
      - governor

  audit:
    image: ghcr.io/metal-toolbox/audittail:v0.9.0
    command: -f /app-audit/audit.log
    volumes:
      - type: volume
        source: audit-log
        target: /app-audit
        read_only: false
    restart: unless-stopped
